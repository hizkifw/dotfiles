export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"

# Fuzzy completion
CASE_SENSITIVE=false
HYPHEN_INSENSITIVE=true

# Automatically update without prompting
DISABLE_UPDATE_PROMPT=true
plugins=(git)

source $ZSH/oh-my-zsh.sh

# Add ~/.local/bin to path
typeset -U path # make path unique
path[1,0]=~/.local/bin

# Add ~/.local/app/*/bin, ~/.cargo/bin, ~/go/bin to path
for app in ~/.local/app/* ~/.cargo ~/go; do
    if [ -d "$app/bin" ]; then
        path+=("$app/bin")
    fi
done

# Aliases
alias t="tmux"
alias k="kubectl"
alias gpoh="git push -u origin HEAD"
alias clip="xclip -selection clipboard"
alias hl="highlight -O ansi -l"

# fix kitty ssh
alias ssh="TERM=xterm-256color ssh"

# vim
alias v="nvim"
alias vi="nvim"
alias vim="nvim"

# global config
export EDITOR="nvim"
export BROWSER="firefox"
export TERMINAL="kitty"

# ssh gpg agent
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
gpg-connect-agent updatestartuptty /bye >/dev/null

# direnv hook
command -v direnv &>/dev/null && eval "$(direnv hook zsh)"

# pyenv
pyenv() {
  command -v pyenv &>/dev/null && \
    eval "$(command pyenv init --path)" && \
    eval "$(command pyenv init -)" && \
    command pyenv virtualenv --help &>/dev/null && \
      eval "$(command pyenv virtualenv-init -)"

  command pyenv "$@"
}

# Enable nvm on-demand
load_nvm() {
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
}
nvm() {
  load_nvm
  nvm "$@"
}

# gcloud autocompletion
[[ -f /opt/google-cloud-sdk/completion.zsh.inc ]] && source /opt/google-cloud-sdk/completion.zsh.inc

# shrink pdf
shrinkpdf() {
  infile="$1"
  outfile="$2"
  if [ -z "$outfile" ]; then
    echo "Usage: shrinkpdf <infile> <outfile>"
    return 1
  fi
  gs -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -sOutputFile="$outfile" "$infile"
}

# downgrade arch kernel to currently running version
# workaround to fix docker https://github.com/moby/moby/issues/27426#issuecomment-346270696
kernel-downgrade-to-running-version() {
  sudo pacman -U /var/cache/pacman/pkg/linux-$(uname -r | sed 's/-arch/.arch/')-x86_64.pkg.tar.zst
}
